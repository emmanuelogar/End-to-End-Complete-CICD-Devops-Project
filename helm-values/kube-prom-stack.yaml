alertmanager:
  enabled: true
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    hosts:
      - alertmanager.devdeploy.site
    tls:
      - secretName: alertmanager-tls
        hosts:
          - "alertmanager.devdeploy.site"
  config:
      global:
        resolve_timeout: 5m
      route:
        group_by: ['namespace']
        group_wait: 30s
        group_interval: 5m
        repeat_interval: 12h
        receiver: 'slack-notification'
        routes:
        - receiver: 'slack-notification'
          matchers:
            - severity = "critical"
      receivers:
      - name: 'slack-notification'
        slack_configs:
            - api_url: 'https://hooks.slack.com/services/T08ULBZB5UY/B08U0CE3DEG/OivCLYq28gNzz4TabiY5zUj'
              channel: '#alerts'
              send_resolved: true
      templates:
      - '/etc/alertmanager/config/*.tmpl'

grafana:
  enabled: true
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    hosts:
      - grafana.devdeploy.site
    tls: 
      - secretName: grafana-tls
        hosts:
        - "grafana.devdeploy.site"
  adminUser: admin
  adminPassword: "admin"

prometheus:
  enabled: true
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    hosts:
      - prometheus.devdeploy.site
    tls:
      - secretName: prometheus-tls
        hosts:
          - "prometheus.devdeploy.site"
  alertmanager:
    enabled: false
  pushgateway:
    enabled: false
  server:
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    alerting:
      alertmanagers:
        - static_configs:
            - targets:
                - alertmanager:9093
    rule_files:
      - /etc/prometheus/rules/*.yaml
    resources:
      requests:
        memory: "256Mi"
        cpu: "200m"
      limits:
        memory: "512Mi"
        cpu: "500m"
    retention: 10d
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 5Gi
  kubeStateMetrics:
    enabled: true
  nodeExporter:
    enabled: true
