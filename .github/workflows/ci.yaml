name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: easyshop-app
  MIGRATION_IMAGE_NAME: easyshop-migration

jobs:
  # -------------------------
  # 1. Run Tests (Full CI Tests)
  # -------------------------
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run Unit & Integration Tests with Coverage
        run: npm test

      - name: Run E2E Tests (optional)
        run: npm run test:e2e --if-present

  # -------------------------
  # 2. Build, Scan & Push Images
  # -------------------------
  build:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Git metadata
        id: vars
        run: echo "tag=${GITHUB_RUN_NUMBER}" >> $GITHUB_OUTPUT

      # -------------------------
      # First build → local only
      # -------------------------
      - name: Build Main App Image (local only)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: cicd:main

      - name: Build Migration Image (local only)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./scripts/Dockerfile.migration
          push: false
          tags: cicd:migration

      # -------------------------
      # Security Scans (local images)
      # -------------------------
      - name: Security Scan with Trivy (Main App)
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: cicd:main
          severity: HIGH,CRITICAL
          vuln-type: os,library

      - name: Security Scan with Trivy (Migration)
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: cicd:migration
          severity: HIGH,CRITICAL
          vuln-type: os,library

      # -------------------------
      # Second build → push if scan passes
      # -------------------------
      - name: Push Main App Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.tag }}

      - name: Push Migration Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./scripts/Dockerfile.migration
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.MIGRATION_IMAGE_NAME }}:${{ steps.vars.outputs.tag }}

      # -------------------------
      # Update Helm Manifests
      # -------------------------
      - name: Update Kubernetes Manifests
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          yq -i ".image.repository = \"ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}\"" kubernetes/helm/easyshop/values.yaml
          yq -i ".image.tag = \"${{ steps.vars.outputs.tag }}\"" kubernetes/helm/easyshop/values.yaml

          yq -i ".migrationJob.image = \"ghcr.io/${{ github.repository_owner }}/${{ env.MIGRATION_IMAGE_NAME }}:${{ steps.vars.outputs.tag }}\"" kubernetes/helm/easyshop/values.yaml

          git add kubernetes/
          git commit -m "Update manifests with image tag ${{ steps.vars.outputs.tag }}"
          git push
