name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: easyshop-app
  MIGRATION_IMAGE_NAME: easyshop-migration

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Git metadata
        id: vars
        run: echo "tag=${GITHUB_RUN_NUMBER}" >> $GITHUB_OUTPUT

      - name: Build & Push Main App Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          no-cache: true
          tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.tag }}

      - name: Build & Push Migration Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./scripts/Dockerfile.migration
          push: true
          no-cache: true
          tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.MIGRATION_IMAGE_NAME }}:${{ steps.vars.outputs.tag }}

      - name: Update Kubernetes Manifests
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          yq -i ".image.repository = \"ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}\"" kubernetes/helm/easyshop/values.yaml
          yq -i ".image.tag = \"${{ steps.vars.outputs.tag }}\"" kubernetes/helm/easyshop/values.yaml

          yq -i ".migrationJob.image = \"ghcr.io/${{ github.repository_owner }}/${{ env.MIGRATION_IMAGE_NAME }}:${{ steps.vars.outputs.tag }}\"" kubernetes/helm/easyshop/values.yaml

          git add kubernetes/
          git commit -m "Update manifests with image tag ${{ steps.vars.outputs.tag }}"
          git push
